/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.HospitalAdminRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
//import Business.HospitalManager.HospitalManager;
//import Business.HospitalManager.HospitalManagerDirectory;
import Business.Insurance.Insurance;
import Business.Organization.DoctorOrganization;
import Business.Organization.HospitalOrganization;
import Business.Organization.InsuranceOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Organization.PatientOrganization;
import Business.Patient.Patient;
import Business.RegisterRequest.RegisterRequest;
import Business.Role.HospitalManager;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 *@author Irene, Yushan
 */
public class ManageHospitalManagerJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private HospitalOrganization hospitalOrganization;
    private EcoSystem ecoSystem;
    /**
     * Creates new form ManageEmployeeJPanel
     */
    public ManageHospitalManagerJPanel(JPanel userProcessContainer, UserAccount account, HospitalOrganization hospitalOrganization, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.userAccount = userAccount;
        this.hospitalOrganization = (HospitalOrganization)hospitalOrganization;
        this.enterprise = enterprise;
        
        populateTable();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageHospManager = new javax.swing.JTable();
        BackJButton = new javax.swing.JButton();
        RemoveJButton1 = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();

        setBackground(new java.awt.Color(238, 202, 238));
        setMaximumSize(new java.awt.Dimension(700, 410));
        setMinimumSize(new java.awt.Dimension(700, 410));
        setPreferredSize(new java.awt.Dimension(700, 410));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel12.setText("Manage Hospital Manager");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, -1));

        tblManageHospManager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Department"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblManageHospManager);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 460, 160));

        BackJButton.setText("<<Back");
        BackJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackJButtonActionPerformed(evt);
            }
        });
        add(BackJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        RemoveJButton1.setText("Remove");
        RemoveJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveJButton1ActionPerformed(evt);
            }
        });
        add(RemoveJButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, -1, -1));

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void BackJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_BackJButtonActionPerformed

    private void RemoveJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveJButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblManageHospManager.getSelectedRow();
        
        if (selectedRow < 0) {
            javax.swing.JOptionPane.showMessageDialog(null, "Please select a row to remove!");
            return;
        }
        
        String username = (String) tblManageHospManager.getValueAt(selectedRow, 0);
        
        UserAccount toRemove = null;
        for (UserAccount manager : hospitalOrganization.getUserAccountDirectory().getUserAccountList()) {
            if (manager.getRole() instanceof HospitalManager){
                if (manager.getName().equals(username)) {
                    toRemove = manager;
                    break;
                }
            }
        }
        if (toRemove != null) {
            hospitalOrganization.getHospitalManager().remove(toRemove); 
            hospitalOrganization.getUserAccountDirectory().removeUserAccount(toRemove);
            javax.swing.JOptionPane.showMessageDialog(null, "Hospital Manager " + username + " removed successfully!");
        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Hospital Manager not found!");
        }

         populateTable();
    }//GEN-LAST:event_RemoveJButton1ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        AddHospitalManagerJPanel panel = new AddHospitalManagerJPanel(userProcessContainer,userAccount,hospitalOrganization,enterprise, ecoSystem);
        userProcessContainer.add("AddHospitalManagerJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackJButton;
    private javax.swing.JButton RemoveJButton1;
    private javax.swing.JButton btnAdd;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblManageHospManager;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblManageHospManager.getModel();
        model.setRowCount(0); // 清空表格

        for (UserAccount userAccount : hospitalOrganization.getUserAccountDirectory().getUserAccountList()) {
            if (userAccount.getRole() instanceof HospitalManager) { // only HospitalManager
                Object[] row = new Object[2];
                row[0] = userAccount.getName(); // 姓名
                row[1] = userAccount.getDepartment();
      
                model.addRow(row);
            }
        }
    }
}
